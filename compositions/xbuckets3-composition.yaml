apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xbuckets3s
spec:
  compositeTypeRef:
    apiVersion: s3.anycompany.com/v1alpha1
    kind: XBucketS3
  resources:
    - name: s3bucket
      base:
        apiVersion: s3.aws.upbound.io/v1beta1
        kind: Bucket
        spec:
          forProvider:
            publicAccessBlockConfiguration:
              blockPublicAcls: true
              ignorePublicAcls: true
              blockPublicPolicy: true
              restrictPublicBuckets: true
            serverSideEncryptionConfiguration:
              - rule:
                  applyServerSideEncryptionByDefault:
                    sseAlgorithm: aws:kms
            versioningConfiguration:
              status: Enabled
            region: us-east-1
            acl: private
            tags:
              - key: DataClassification
                value: Standard
            policy: |
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "DenyUnencryptedTransport",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Action": "s3:*",
                    "Resource": [
                      "arn:aws:s3:::{{ .metadata.name }}",
                      "arn:aws:s3:::{{ .metadata.name }}/*"
                    ],
                    "Condition": { "Bool": { "aws:SecureTransport": "false" } }
                  }
                ]
              }
      patches:
        - fromFieldPath: "spec.parameters.bucketName"
          toFieldPath: "metadata.name"
        - fromFieldPath: "spec.parameters.region"
          toFieldPath: "spec.forProvider.region"
        - fromFieldPath: "spec.parameters.acl"
          toFieldPath: "spec.forProvider.acl"
        - fromFieldPath: "spec.parameters.dataClassification"
          toFieldPath: "spec.forProvider.tags"
          transforms:
            - type: string
              string:
                fmt: "DataClassification=%s"
        - fromFieldPath: "spec.parameters.kmsKeyArn"
          toFieldPath: "spec.forProvider.serverSideEncryptionConfiguration[0].rule.applyServerSideEncryptionByDefault.kmsMasterKeyID"

    - name: ApllicationSetArgoControlAddons
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        spec:
          deletionPolicy: Orphan
          forProvider:
            manifest:
              apiVersion: argoproj.io/v1alpha1
              kind: ApplicationSet
              metadata:
                name: cluster-addons
                namespace: argocd
              spec:
                syncPolicy:
                  preserveResourcesOnDeletion: true
                generators:
                  - clusters: {}
                template:
                  metadata:
                    name: cluster-addons
                  spec:
                    project: default
                    source:
                      repoURL: '{{metadata.annotations.addons_repo_url}}'
                      path: '{{metadata.annotations.addons_repo_basepath}}{{metadata.annotations.addons_repo_path}}'
                      targetRevision: '{{metadata.annotations.addons_repo_revision}}'
                      directory:
                        recurse: true
                    destination:
                      namespace: argocd
                      server: '{{metadata.annotations.addons_destination_server}}'
                    syncPolicy:
                      automated: {}
      patches:
        - fromFieldPath: spec.id
          toFieldPath: spec.providerConfigRef.name
